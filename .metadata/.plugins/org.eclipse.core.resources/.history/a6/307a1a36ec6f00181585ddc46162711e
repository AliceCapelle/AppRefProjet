package bri;

import java.io.*;
import java.lang.reflect.InvocationTargetException;
import java.net.*;

import exception.OutOfBounds;

public class ServiceAMA implements Runnable {

	private Socket client;

	public ServiceAMA(Socket socket) {
		client = socket;
	}

	public void run() {
		try {
			BufferedReader in = new BufferedReader(new InputStreamReader(client.getInputStream()));
			PrintWriter out = new PrintWriter(client.getOutputStream(), true);
			

			Class<? extends Runnable> c;
			boolean choixIsOk = false;
			do {
				out.println(ServiceRegistry.toStringue()+ "##Tapez le numéro de service désiré :");
				int choix = Integer.parseInt(in.readLine());
				try {
					c = ServiceRegistry.getServiceClass(choix - 1);
					choixIsOk = true;
					try {
						new Thread(c.getConstructor(Socket.class).newInstance(client)).start();
						System.out.println("ok on lance le service");
					} catch (InstantiationException | IllegalAccessException
							| IllegalArgumentException
							| InvocationTargetException | NoSuchMethodException
							| SecurityException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				} catch (java.lang.ArrayIndexOutOfBoundsException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			} while (choixIsOk);

			// instancier le service numéro "choix" en lui passant la socket
			// "client"
			// invoquer run() pour cette instance ou la lancer dans un thread à
			// part

		} catch (IOException e) {
			// Fin du service
		}

		try {
			client.close();
		} catch (IOException e2) {
		}
	}

	protected void finalize() throws Throwable {
		client.close();
	}

	// lancement du service
	public void start() {
		(new Thread(this)).start();
	}

}
